import boto3
import json
import requests
from requests_aws4auth import AWS4Auth


region = 'us-west-2' # For example, us-west-1
service = 'es'
credentials = boto3.Session().get_credentials()
awsauth = AWS4Auth(credentials.access_key, credentials.secret_key, region, service, session_token=credentials.token)


url = 'https://search-content-r4qfznkvalxocvzbyczvyyqvoi.us-west-2.es.amazonaws.com/metadata/_search'

# Lambda execution starts here
def handler(event, context):
    print ('inside handler');
    print('## EVENT')
    print(event)
    # Put the user query into the query DSL for more accurate search results.
    # Note that certain fields are boosted (^).
    query = {
        "query": {
			"multi_match": {
      		"fields":  [ "director", "title", "genre" ],
      		"query": event['queryStringParameters']['q'],
      		"fuzziness": "AUTO"
            }
        },
        "sort": {
            "director.keyword": {
              "order": "asc"
            }
          }
    }

    # Elasticsearch 6.x requires an explicit Content-Type header
    headers = { "Content-Type": "application/json" }

    # Make the signed HTTP request
    print('## RESULTS')
    print (requests.get(url, auth=awsauth, headers=headers, data=json.dumps(query)))
    r = requests.get(url, auth=awsauth, headers=headers, data=json.dumps(query))

    # Create the response and add some extra content to support CORS
    response = {
        "statusCode": 200,
        "headers": {
            "Access-Control-Allow-Origin": '*'
        },
        "isBase64Encoded": False
    }

    # Add the search results to the response
    response['body'] = r.text
    return response
